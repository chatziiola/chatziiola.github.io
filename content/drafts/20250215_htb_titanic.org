#+TITLE: HTB: Titanic
#+DATE: <2025-02-15 23:46>
#+DESCRIPTION: 
#+FILETAGS: 

* Introduction

Today's machine is Titanic, and well, I just wanted to practice some more

#+NAME: IP
#+begin_src shell
  echo -e "IP=10.129.117.114\nmachine=~/Titanic" | tee -a ~/.zshrc && source ~/.zshrc && mkdir $machine && tmux 
#+end_src

* Recon

** Nmap

#+NAME: NMAP scans
#+begin_src bash
mkdir -p "$machine/nmap"; nmap -sV -Pn -sC -oA "$machine/nmap/initial" $IP; sleep 10; nmap -p- $IP -oA "$machine/nmap/fullports" 
# If ports found something extra:
nmap -p$ports -sC -sV $IP
#+end_src

*** Hostname
Service found to point to ~titanic.htb~

#+NAME: Nmap UDP Port Scan
#+begin_src bash
echo "$IP titanic.htb" | sudo tee -a /etc/hosts
#+end_src


** Nmap Findings
- [ ] Number of open ports: 2
  - 22, 80
- [ ] Number of filtered ports: 65533
- [ ] Target OS: Linux
- [ ] Service running on each port:
  - 22: SSH: OpenSSH 8.9p1
  - 80: HTTP: Apache httpd 2.4.52
- [ ] Check for readily available exploits
  - Nothing obvious at first


** Web

*** titanic.htb, port 80
:PROPERTIES:
:ID:       bd1c8dcc-1159-446c-ae89-9eeb9a4d8423
:END:

A single page (apparently) website, with no subsections implemented
(navigation links are broken), allowing the user to /purchase a ticket
on the titanic/. That is the only place for input, at least on first glance

#+NAME: Link to webpage
#+begin_example
http://titanic.htb:80 
#+end_example


#+label:titanichtb-homepage
#+caption: titanic.htb homepage
#+ATTR_HTML: :alt A screenshot of the homepage, showing the "book now" functionality, the navigation panel and images of the titanic.
[[file:images/Recon/20250216_000103_screenshot.png]]


- [ ] Check Wappalyzer output
  - We see that it must be using ~Flask~
- [ ] Check for CMS being used/other obvious software
- [ ] See the source code for leaking information
  - Nothing, must be a 
- [ ] Open burp suite and crawl a little bit, while running scans

*** Gobuster Directory Scanning

Off now to check with gobuster:

#+NAME: Gobuster with IP and default path
#+begin_src bash
domain=titanic.htb; gobuster dir -w /usr/share/seclists/Discovery/Web-Content/big.txt -u http://$domain -o $machine/$domain.gobuster.big  
#+end_src


ctfgobusterout
# ctfferoxbuster
# ctfwebcheck

** Manual Web checks
:PROPERTIES:
:ID:       9136b751-76ba-48b9-a8ce-69c456a223f3
:END:
Especially since it is an easy box, it makes sense to suspect an easy
vulnerability in the book now functionality, however our input does
not get shown anywhere on the page. Instead, when we finally submit
our information we get a ~.json~ file, with the exact credentials we
supplied:
#+NAME: json file
#+begin_src text
{"name": "takis gab", "email": "test@test.tc", "phone": "test", "date": "0001-01-01", "cabin": "Standard"}
#+end_src

It is interesting, noting down that the file is "received" through the
~/download~ endpoint, but using a parameter: ~ticket~


#+label:Parameter-in-download-endpoint
#+caption: Parameter in download endpoint
#+ATTR_HTML: :alt Burp suite partial screenshot showing the presence of a ticket parameter
[[file:images/Recon/20250216_000851_screenshot.png]]


*AND IT IS VULNERABLE TO LFI*, the following payload worked perfectly
 allowing us to read the target system's ~/etc/passwd~
#+NAME: Payload
#+begin_src text
/download?ticket=../../../../../etc/passwd
#+end_src

From that we can see that:
- root login is permitted and root has ~/bin/bash~
- there is a ~developer~ user with a shell
- there is a ~_laurel~ user with no login, but with a home directory of
  ~/var/log/laurel~, pointing us in that direction[fn:1]
  - http://titanic.htb/download?ticket=../../../../../../var/log/laurel/audit.log
  - Causes server error, maybe that just means it exists(?)

*** Other interesting (available) files
- Apache configuration: ~/etc/apache2/apache2.conf~

 
** Searching for VHOSTs
While I was stuck searching for interesting files I started searching
for subdomains in the background

#+NAME: ffuf
#+begin_src shell
ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt -H "Host: FUZZ.titanic.htb" -u http://$IP -mc 200
#+end_src

*** Hostname
Service found to point to ~dev.titanic.htb~

#+NAME: Nmap UDP Port Scan
#+begin_src bash
echo "$IP dev.titanic.htb" | sudo tee -a /etc/hosts
#+end_src

*** dev.titanic.htb, port 80

A ~Gitea~ instance

#+NAME: Link to webpage
#+begin_example
http://dev.titanic.htb:80 
#+end_example

#+begin_note
Somewhere at this point I also remembered that in boxes the flags
usually are ~root.txt~ and ~user.txt~ instead of ~flag.txt~ I was looking
for. Changed it and found the user flag in the home directory.
#+end_note


<oc

- [ ] Check Wappalyzer output
  - anything out of the ordinary?
- [ ] Check for CMS being used/other obvious software
- [ ] See the source code for leaking information
- [ ] Open burp suite and crawl a little bit, while running scans

ctfgobusterdir
# ctfferoxbuster
# ctfwebcheck

* Footnotes

[fn:1] https://github.com/threathunters-io/laurel 
